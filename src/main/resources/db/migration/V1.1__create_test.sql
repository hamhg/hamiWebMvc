-- ACL_SID CREATE
DROP TABLE ACL_SID CASCADE CONSTRAINTS PURGE;

CREATE TABLE ACL_SID (
  ID NUMBER(38) NOT NULL PRIMARY KEY,
  PRINCIPAL NUMBER(1) NOT NULL CHECK (PRINCIPAL IN (0, 1)),
  SID VARCHAR2(100) NOT NULL,
  CONSTRAINT UNIQUE_ACL_SID UNIQUE (SID, PRINCIPAL)
);

CREATE OR REPLACE TRIGGER T_ACL_SID_ID
BEFORE INSERT ON ACL_SID
FOR EACH ROW
  BEGIN
    SELECT NVL(MAX(ID)+1,1) INTO :NEW.ID FROM ACL_SID;
  END;
/

-- ACL_CLASS CREATE
DROP TABLE ACL_CLASS CASCADE CONSTRAINTS PURGE;

CREATE TABLE ACL_CLASS (
  ID NUMBER(38) NOT NULL PRIMARY KEY,
  CLASS VARCHAR2(100) NOT NULL,
  CONSTRAINT UK_ACL_CLASS UNIQUE (CLASS)
);

CREATE OR REPLACE TRIGGER T_ACL_CLASS_ID
BEFORE INSERT ON ACL_CLASS
FOR EACH ROW
  BEGIN
    SELECT NVL(MAX(ID)+1,1) INTO :NEW.ID FROM ACL_CLASS;
  END;
/

-- ACL_OBJECT_IDENTITY CREATE
DROP TABLE ACL_OBJECT_IDENTITY CASCADE CONSTRAINTS PURGE;

CREATE TABLE ACL_OBJECT_IDENTITY (
  ID NUMBER(38) NOT NULL PRIMARY KEY,
  OBJECT_ID_CLASS NUMBER(38) NOT NULL,
  OBJECT_ID_IDENTITY NUMBER(38) NOT NULL,
  PARENT_OBJECT NUMBER(38),
  OWNER_SID NUMBER(38),
  ENTRIES_INHERITING NUMBER(1) NOT NULL CHECK (ENTRIES_INHERITING IN (0, 1)),
  CONSTRAINT UK_ACL_OBJECT_IDENTITY UNIQUE (OBJECT_ID_CLASS, OBJECT_ID_IDENTITY),
  CONSTRAINT FK_ACL_OBJECT_IDENTITY_PARENT FOREIGN KEY (PARENT_OBJECT) REFERENCES ACL_OBJECT_IDENTITY (ID),
  CONSTRAINT FK_ACL_OBJECT_IDENTITY_CLASS FOREIGN KEY (OBJECT_ID_CLASS) REFERENCES ACL_CLASS (ID),
  CONSTRAINT FK_ACL_OBJECT_IDENTITY_OWNER FOREIGN KEY (OWNER_SID) REFERENCES ACL_SID (ID)
);

CREATE OR REPLACE TRIGGER T_ACL_OBJECT_IDENTITY_ID
BEFORE INSERT ON ACL_OBJECT_IDENTITY
FOR EACH ROW
  BEGIN
    SELECT NVL(MAX(ID)+1,1) INTO :NEW.ID FROM ACL_OBJECT_IDENTITY;
  END;
/

-- ACL_ENTRY CREATE
DROP TABLE ACL_ENTRY CASCADE CONSTRAINTS PURGE;

CREATE TABLE ACL_ENTRY (
  ID NUMBER(38) NOT NULL PRIMARY KEY,
  ACL_OBJECT_IDENTITY NUMBER(38) NOT NULL,
  ACE_ORDER INTEGER NOT NULL,
  SID NUMBER(38) NOT NULL,
  MASK INTEGER NOT NULL,
  GRANTING NUMBER(1) NOT NULL CHECK (GRANTING IN (0, 1)),
  AUDIT_SUCCESS NUMBER(1) NOT NULL CHECK (AUDIT_SUCCESS IN (0, 1)),
  AUDIT_FAILURE NUMBER(1) NOT NULL CHECK (AUDIT_FAILURE IN (0, 1)),
  CONSTRAINT UNIQUE_ACL_ENTRY UNIQUE (ACL_OBJECT_IDENTITY, ACE_ORDER),
  CONSTRAINT FK_ACL_ENTRY_OBJECT FOREIGN KEY (ACL_OBJECT_IDENTITY) REFERENCES ACL_OBJECT_IDENTITY (ID),
  CONSTRAINT FK_ACL_ENTRY_ACL FOREIGN KEY (SID) REFERENCES ACL_SID (ID)
);

CREATE OR REPLACE TRIGGER T_ACL_ENTRY_ID
BEFORE INSERT ON ACL_ENTRY
FOR EACH ROW
  BEGIN
    SELECT NVL(MAX(ID)+1,1) INTO :NEW.ID FROM ACL_ENTRY;
  END;
/