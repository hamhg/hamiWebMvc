-- PERSISTENT_LOGINS CREATE
CREATE TABLE PERSISTENT_LOGINS (
  USERNAME    VARCHAR2(100) NOT NULL,
  SERIES      VARCHAR2(50) NOT NULL,
  TOKEN       VARCHAR2(50),
  LAST_USED   TIMESTAMP WITH TIME ZONE
);

COMMENT ON TABLE PERSISTENT_LOGINS IS '리멤버미';

COMMENT ON COLUMN PERSISTENT_LOGINS.USERNAME IS '계정명';

COMMENT ON COLUMN PERSISTENT_LOGINS.SERIES IS '로그인 ID';

COMMENT ON COLUMN PERSISTENT_LOGINS.TOKEN IS '쿠키 KEY';

COMMENT ON COLUMN PERSISTENT_LOGINS.LAST_USED IS '최종접속일';

ALTER TABLE PERSISTENT_LOGINS ADD CONSTRAINT PERSISTENT_LOGINS_PK PRIMARY KEY ( SERIES );

-- CMSY0901A CREATE 권한정보
CREATE TABLE CMSY0901A (
  ID               NUMBER NOT NULL,
  USER_ID          VARCHAR2(100) NOT NULL,
  AUTHORITY        VARCHAR2(20) NOT NULL
);

COMMENT ON TABLE CMSY0901A IS '권한관리';

COMMENT ON COLUMN CMSY0901A.ID IS '권한ID';

COMMENT ON COLUMN CMSY0901A.USER_ID IS '계정명';

COMMENT ON COLUMN CMSY0901A.AUTHORITY IS '권한';

ALTER TABLE CMSY0901A ADD CONSTRAINT CMSY0901A_PK PRIMARY KEY ( ID, USER_ID );

--USER_ROLES.USER_ROLE_ID AUTOINCRESEMENT
CREATE OR REPLACE TRIGGER T_CMSY0901A_ID
BEFORE INSERT ON CMSY0901A
FOR EACH ROW
  BEGIN
    SELECT NVL(MAX(ID)+1,1)
    INTO   :NEW.ID
    FROM   CMSY0901A;
  END;
/

-- CMSY0900A CREATE 로그인정보
CREATE TABLE CMSY0900A (
  C_CD                 VARCHAR2(20 BYTE),
  USER_ID              VARCHAR2(100) NOT NULL,
  PASSWORD             VARCHAR2(200) NOT NULL,
  ENABLED              VARCHAR2(1) DEFAULT '1' NOT NULL CHECK (ENABLED IN ('0', '1')),
  USER_NM              VARCHAR2(100 BYTE),
  EMP_ID               VARCHAR2(20 BYTE),
  SUPER_YN             VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL CHECK (SUPER_YN IN ('N','Y')),
  PWD_MOD_YMDHMS       DATE,
  LAST_LOGIN_YMDHMS    DATE,
  LAST_LOGIN_IP        VARCHAR2(100 BYTE),
  ERR_CNT              NUMBER DEFAULT 0 NOT NULL,
  SKIN_CD              VARCHAR2(20 BYTE),
  USER_TYPE            VARCHAR2(20 BYTE),
  INIT_PAGE_CD         VARCHAR2(20 BYTE),
  OUT_EMP_YN           VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL CHECK (OUT_EMP_YN IN ('N','Y')),
  OUT_ORG_NM           VARCHAR2(100 BYTE),
  OUT_COM_NM           VARCHAR2(100 BYTE),
  STA_YMD              VARCHAR2(8 BYTE),
  END_YMD              VARCHAR2(8 BYTE),
  NOTE                 VARCHAR2(500 BYTE),
  INS_USER_ID          VARCHAR2(20 BYTE),
  INS_YMDHMS           DATE,
  MOD_USER_ID          VARCHAR2(20 BYTE),
  MOD_YMDHMS           DATE,
  DEFAULT_PROFILE_ID   VARCHAR2(20 BYTE),
  DEFAULT_MODULE_ID    VARCHAR2(20 BYTE),
  DEFAULT_MENU_ID      VARCHAR2(20 BYTE),
  SLEEP_USER_YN        VARCHAR2(1 BYTE) DEFAULT 'N',
  SLEEP_STA_YMDHMS     DATE
);

COMMENT ON TABLE CMSY0900A IS '유저정보';

COMMENT ON COLUMN CMSY0900A.USER_ID IS '계정명';

COMMENT ON COLUMN CMSY0900A.PASSWORD IS '비밀번호';

COMMENT ON COLUMN CMSY0900A.ENABLED IS '계정상태';

COMMENT ON COLUMN CMSY0900A.EMP_ID IS '사번';

COMMENT ON COLUMN CMSY0900A.SUPER_YN IS 'SUPER_여부';

COMMENT ON COLUMN CMSY0900A.PWD_MOD_YMDHMS IS '비밀번호수정일시';

COMMENT ON COLUMN CMSY0900A.LAST_LOGIN_YMDHMS IS '최종로그인일시';

COMMENT ON COLUMN CMSY0900A.LAST_LOGIN_IP IS '최종로그인아이피';

COMMENT ON COLUMN CMSY0900A.ERR_CNT IS '오류횟수';

COMMENT ON COLUMN CMSY0900A.SKIN_CD IS '스킨코드';

COMMENT ON COLUMN CMSY0900A.USER_TYPE IS '사용자유형';

COMMENT ON COLUMN CMSY0900A.INIT_PAGE_CD IS '초기화면코드';

COMMENT ON COLUMN CMSY0900A.OUT_EMP_YN IS '외부직원여부';

COMMENT ON COLUMN CMSY0900A.OUT_ORG_NM IS '외부조직명';

COMMENT ON COLUMN CMSY0900A.OUT_COM_NM IS '외부회사명';

COMMENT ON COLUMN CMSY0900A.STA_YMD IS '시작일';

COMMENT ON COLUMN CMSY0900A.END_YMD IS '종료일';

COMMENT ON COLUMN CMSY0900A.NOTE IS '비고';

COMMENT ON COLUMN CMSY0900A.INS_USER_ID IS '입력자ID';

COMMENT ON COLUMN CMSY0900A.INS_YMDHMS IS '입력일시';

COMMENT ON COLUMN CMSY0900A.MOD_USER_ID IS '작업자ID';

COMMENT ON COLUMN CMSY0900A.MOD_YMDHMS IS '수정일시';

COMMENT ON COLUMN CMSY0900A.DEFAULT_PROFILE_ID IS '시작페이지_PROFILE_ID';

COMMENT ON COLUMN CMSY0900A.DEFAULT_MODULE_ID IS '시작페이지_MODULE_ID';

COMMENT ON COLUMN CMSY0900A.DEFAULT_MENU_ID IS '시작페이지_MENU_ID';

COMMENT ON COLUMN CMSY0900A.SLEEP_USER_YN IS '휴면계정여부';

COMMENT ON COLUMN CMSY0900A.SLEEP_STA_YMDHMS IS '휴면계정_시작일';

ALTER TABLE CMSY0900A ADD CONSTRAINT CMSY0900A_PK PRIMARY KEY ( USER_ID );

ALTER TABLE CMSY0901A ADD CONSTRAINT CMSY0901A_CMSY0900A_FK FOREIGN KEY ( USER_ID )
REFERENCES CMSY0900A ( USER_ID );

-- USERS VIEW
CREATE OR REPLACE FORCE VIEW USERS ("USERNAME", "PASSWORD", "ENABLED") AS
  SELECT USER_ID AS USERNAME, PASSWORD, ENABLED
  FROM CMSY0900A;

COMMENT ON TABLE USERS  IS 'Login User Info';

-- AUTHORITIES VIEW
CREATE OR REPLACE VIEW AUTHORITIES ("ID", "USERNAME", "AUTHORITY") AS
  SELECT  ID, USER_ID AS USERNAME, AUTHORITY
  FROM CMSY0901A;

COMMENT ON TABLE AUTHORITIES IS 'Login User Info';

-- GROUPS CREATE
CREATE TABLE GROUPS (
  ID NUMBER(15) NOT NULL PRIMARY KEY,
  GROUP_NAME VARCHAR2(50) NOT NULL
);

CREATE OR REPLACE TRIGGER T_GROUPS_ID
BEFORE INSERT ON GROUPS
FOR EACH ROW
  BEGIN
    SELECT NVL(MAX(ID)+1,1) INTO :NEW.ID FROM GROUPS;
  END;
/

-- GROUP_CMSY0901A CREATE
CREATE TABLE GROUP_AUTHORITIES (
  GROUP_ID NUMBER(15) NOT NULL,
  AUTHORITY VARCHAR2(50) NOT NULL,
  CONSTRAINT FK_GROUP_AUTHORITIES_GROUP FOREIGN KEY (GROUP_ID) REFERENCES GROUPS (ID)
);

CREATE OR REPLACE TRIGGER T_GROUP_AUTHORITIES_ID
BEFORE INSERT ON GROUP_AUTHORITIES
FOR EACH ROW
  BEGIN
    SELECT NVL(MAX(GROUP_ID)+1,1) INTO :NEW.GROUP_ID FROM GROUP_AUTHORITIES;
  END;
/

-- GROUP_MEMBERS CREATE
CREATE TABLE GROUP_MEMBERS (
  ID NUMBER(15) NOT NULL PRIMARY KEY,
  USERNAME VARCHAR2(50) NOT NULL,
  GROUP_ID NUMBER(38) NOT NULL,
  CONSTRAINT FK_GROUP_MEMBERS_GROUP FOREIGN KEY (GROUP_ID) REFERENCES GROUPS (ID)
);

CREATE OR REPLACE TRIGGER T_GROUP_MEMBERS_ID
BEFORE INSERT ON GROUP_MEMBERS
FOR EACH ROW
  BEGIN
    SELECT NVL(MAX(ID)+1,1) INTO :NEW.ID FROM GROUP_MEMBERS;
  END;
/

-- ACL_SID CREATE
CREATE TABLE ACL_SID (
  ID NUMBER(38) NOT NULL PRIMARY KEY,
  PRINCIPAL NUMBER(1) NOT NULL CHECK (PRINCIPAL IN (0, 1)),
  SID VARCHAR2(100) NOT NULL,
  CONSTRAINT UNIQUE_ACL_SID UNIQUE (SID, PRINCIPAL)
);

CREATE OR REPLACE TRIGGER T_ACL_SID_ID
BEFORE INSERT ON ACL_SID
FOR EACH ROW
  BEGIN
    SELECT NVL(MAX(ID)+1,1) INTO :NEW.ID FROM ACL_SID;
  END;
/

-- ACL_CLASS CREATE
CREATE TABLE ACL_CLASS (
  ID NUMBER(38) NOT NULL PRIMARY KEY,
  CLASS VARCHAR2(100) NOT NULL,
  CONSTRAINT UK_ACL_CLASS UNIQUE (CLASS)
);

CREATE OR REPLACE TRIGGER T_ACL_CLASS_ID
BEFORE INSERT ON ACL_CLASS
FOR EACH ROW
  BEGIN
    SELECT NVL(MAX(ID)+1,1) INTO :NEW.ID FROM ACL_CLASS;
  END;
/

-- ACL_OBJECT_IDENTITY CREATE
CREATE TABLE ACL_OBJECT_IDENTITY (
  ID NUMBER(38) NOT NULL PRIMARY KEY,
  OBJECT_ID_CLASS NUMBER(38) NOT NULL,
  OBJECT_ID_IDENTITY NUMBER(38) NOT NULL,
  PARENT_OBJECT NUMBER(38),
  OWNER_SID NUMBER(38),
  ENTRIES_INHERITING NUMBER(1) NOT NULL CHECK (ENTRIES_INHERITING IN (0, 1)),
  CONSTRAINT UK_ACL_OBJECT_IDENTITY UNIQUE (OBJECT_ID_CLASS, OBJECT_ID_IDENTITY),
  CONSTRAINT FK_ACL_OBJECT_IDENTITY_PARENT FOREIGN KEY (PARENT_OBJECT) REFERENCES ACL_OBJECT_IDENTITY (ID),
  CONSTRAINT FK_ACL_OBJECT_IDENTITY_CLASS FOREIGN KEY (OBJECT_ID_CLASS) REFERENCES ACL_CLASS (ID),
  CONSTRAINT FK_ACL_OBJECT_IDENTITY_OWNER FOREIGN KEY (OWNER_SID) REFERENCES ACL_SID (ID)
);

CREATE OR REPLACE TRIGGER T_ACL_OBJECT_IDENTITY_ID
BEFORE INSERT ON ACL_OBJECT_IDENTITY
FOR EACH ROW
  BEGIN
    SELECT NVL(MAX(ID)+1,1) INTO :NEW.ID FROM ACL_OBJECT_IDENTITY;
  END;
/

-- ACL_ENTRY CREATE
CREATE TABLE ACL_ENTRY (
  ID NUMBER(38) NOT NULL PRIMARY KEY,
  ACL_OBJECT_IDENTITY NUMBER(38) NOT NULL,
  ACE_ORDER INTEGER NOT NULL,
  SID NUMBER(38) NOT NULL,
  MASK INTEGER NOT NULL,
  GRANTING NUMBER(1) NOT NULL CHECK (GRANTING IN (0, 1)),
  AUDIT_SUCCESS NUMBER(1) NOT NULL CHECK (AUDIT_SUCCESS IN (0, 1)),
  AUDIT_FAILURE NUMBER(1) NOT NULL CHECK (AUDIT_FAILURE IN (0, 1)),
  CONSTRAINT UNIQUE_ACL_ENTRY UNIQUE (ACL_OBJECT_IDENTITY, ACE_ORDER),
  CONSTRAINT FK_ACL_ENTRY_OBJECT FOREIGN KEY (ACL_OBJECT_IDENTITY) REFERENCES ACL_OBJECT_IDENTITY (ID),
  CONSTRAINT FK_ACL_ENTRY_ACL FOREIGN KEY (SID) REFERENCES ACL_SID (ID)
);

CREATE OR REPLACE TRIGGER T_ACL_ENTRY_ID
BEFORE INSERT ON ACL_ENTRY
FOR EACH ROW
  BEGIN
    SELECT NVL(MAX(ID)+1,1) INTO :NEW.ID FROM ACL_ENTRY;
  END;
/