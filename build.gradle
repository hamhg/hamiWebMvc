group 'com.hami'
version '1.0'

apply plugin: 'base'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'

apply plugin: 'war'
apply plugin: 'tomcat'

repositories {
    mavenCentral()
    jcenter()
}

configurations {
    webAppDirName = "webapp"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
[compileJava, compileTestJava]*.options*.encoding = 'UTF8'

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { url 'http://repo.springsource.org/plugins-release' }
    }
    dependencies {
        classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:1.0'
        classpath (group: 'org.gradle.api.plugins', name: 'gradle-cargo-plugin', version: '0.6.1')
        classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.1'
        classpath 'io.spring.gradle:dependency-management-plugin:0.5.1.RELEASE'
    }
}

dependencies {
    // http://mvnrepository.com/ 버전 확인
    def slf4jVersion = "1.7.25"
    compile "org.slf4j:jcl-over-slf4j:$slf4jVersion"
    compile "org.slf4j:jul-to-slf4j:$slf4jVersion"
    compile "org.slf4j:slf4j-api:$slf4jVersion"
    compile 'ch.qos.logback:logback-classic:1.2.3'

    def springVersion = "4.3.13.RELEASE"
    def springSecurityVersion = "4.2.3.RELEASE"
    compile group: 'org.springframework', name: 'spring-core', version:"$springVersion"
    compile group: 'org.springframework', name: 'spring-webmvc', version:"$springVersion"
    compile group: 'org.springframework.security', name: 'spring-security-core', version:"$springSecurityVersion"
    compile group: 'org.springframework.security', name: 'spring-security-config', version:"$springSecurityVersion"
    compile group: 'org.springframework.security', name: 'spring-security-taglibs', version:"$springSecurityVersion"
    compile group: 'org.springframework.security', name: 'spring-security-web', version:"$springSecurityVersion"
    compile group: 'org.springframework.security', name: 'spring-security-acl', version:"$springSecurityVersion"

    compile group: 'org.thymeleaf', name: 'thymeleaf-spring4', version: '3.0.7.RELEASE'
    compile group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity4', version: '3.0.2.RELEASE'
    compile group: 'nz.net.ultraq.thymeleaf', name: 'thymeleaf-layout-dialect', version: '2.2.2'
    compile group: 'org.freemarker', name: 'freemarker', version: '2.3.20'
    compile group: 'org.bgee.log4jdbc-log4j2', name: 'log4jdbc-log4j2-jdbc4.1', version: '1.16'
    compile group: 'org.logback-extensions', name: 'logback-ext-spring', version: '0.1.5'
    compile group: 'org.springframework', name: 'springloaded', version: '1.2.8.RELEASE'

    compile group: 'org.jdom', name: 'jdom2', version: '2.0.5'
    compile 'com.google.guava:guava:22.0'
    compile 'org.apache.poi:poi:3.17'
    compile 'org.apache.poi:poi-ooxml:3.17'
    compile group: 'com.itextpdf', name: 'itextpdf', version: '5.5.12'
    compile 'com.oracle:ojdbc6:12.1.0.1-atlassian-hosted'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.8.9'
    compile group: 'org.codehaus.groovy', name: 'groovy', version: '2.4.12'
    compile group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.1'
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.1'
    compile group: 'javax.servlet', name: 'jstl', version: '1.2'
    compileOnly 'org.projectlombok:lombok:1.16.18'

    compile files('D:/workspace/hamiCore/build/libs/hamiCore-1.0.jar')

    testCompile "org.springframework:spring-test:$springVersion"
    testCompile files('D:/workspace/hamiCore/build/libs/hamiCore-1.0.jar')
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
    providedCompile group: 'org.flywaydb', name: 'flyway-gradle-plugin', version: '4.2.0'
    providedCompile 'org.flywaydb:flyway-gradle-plugin:4.0'
    providedCompile 'javax.websocket:javax.websocket-api:1.1'
    providedCompile 'javax.servlet:jsp-api:2.0'
}

task nestedSpecs(type: Copy) {
    into 'build/exploded/WEB-INF/classes'
    exclude '**/*Test.java'
    from('src/main/java') {
        include '**/*.xml'
    }
    into('classes') {
        from configurations.runtime
    }
}

project.ext {
    warBaseName = 'hamiWeb'
    warVersion = '1.0' + '_' + new Date().format('yyyyMMdd-HHmmss')
}

ext.profile = (!project.hasProperty('profile') || !profile) ? 'dev' : profile

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java']
            //include 'src/main/java/**/*.*'
		}
		resources {
			srcDirs = ['src/main/resources', 'src/main/resources/properties/${profile}']
            //exclude 'src/main/resources/properties/**'
            //exclude 'src/main/resources/db/**'
		}
	}
}

war {
    baseName = project.warBaseName
    version = project.warVersion
    //from 'src/rootContent' // adds a file-set to the root of the archive
    //fileSet(dir: file('src/main/java/**/*.xml')) // adds a file-set to the root of the archive
    //additionalLibs(dir: file('additionalLibs')) // adds a file-set to the WEB-INF/lib dir.
    //classpath fileTree('additionalLibs') // adds a file-set to the WEB-INF/lib dir.
    //libConfigurations('moreLibs') // adds a configuration to the WEB-INF/lib dir.
    //webInf { from 'src/additionalWebInf' } // adds a file-set to the WEB-INF dir.
    //webXml = file('src/someWeb.xml') // copies a file to WEB-INF/web.xml    
    exclude("build/**")
    archiveName = "${baseName}_${warVersion}.${extension}" 
}

war.doLast {
    //nestedSpecs.execute()
    //explodedWar.execute()
}

task explodedWar(type: Sync) {
    into "${buildDir}/exploded"
    with war
} 

tomcatRun {
    dependsOn war
    contextPath = '/'
}
